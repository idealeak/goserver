// Code generated by protoc-gen-go.
// source: protocol/serviceinfo.proto
// DO NOT EDIT!

package protocol

import proto "code.google.com/p/goprotobuf/proto"
import json "encoding/json"
import math "math"

// Reference proto, json, and math imports to suppress error if they are not otherwise used.
var _ = proto.Marshal
var _ = &json.SyntaxError{}
var _ = math.Inf

type ServiceInfo struct {
	AreaId           *int32   `protobuf:"varint,1,req" json:"AreaId,omitempty"`
	SrvId            *int32   `protobuf:"varint,2,req" json:"SrvId,omitempty"`
	SrvType          *int32   `protobuf:"varint,3,req" json:"SrvType,omitempty"`
	SrvPID           *int32   `protobuf:"varint,4,req" json:"SrvPID,omitempty"`
	SrvName          *string  `protobuf:"bytes,5,req" json:"SrvName,omitempty"`
	NetworkType      *string  `protobuf:"bytes,6,req" json:"NetworkType,omitempty"`
	Ip               *string  `protobuf:"bytes,7,req" json:"Ip,omitempty"`
	Port             *int32   `protobuf:"varint,8,req" json:"Port,omitempty"`
	WriteTimeOut     *int32   `protobuf:"varint,9,opt" json:"WriteTimeOut,omitempty"`
	ReadTimeOut      *int32   `protobuf:"varint,10,opt" json:"ReadTimeOut,omitempty"`
	IdleTimeOut      *int32   `protobuf:"varint,11,opt" json:"IdleTimeOut,omitempty"`
	MaxDone          *int32   `protobuf:"varint,12,opt" json:"MaxDone,omitempty"`
	MaxPend          *int32   `protobuf:"varint,13,opt" json:"MaxPend,omitempty"`
	MaxPacket        *int32   `protobuf:"varint,14,opt" json:"MaxPacket,omitempty"`
	RcvBuff          *int32   `protobuf:"varint,15,opt" json:"RcvBuff,omitempty"`
	SndBuff          *int32   `protobuf:"varint,16,opt" json:"SndBuff,omitempty"`
	SoLinger         *int32   `protobuf:"varint,17,opt" json:"SoLinger,omitempty"`
	IsAuth           *bool    `protobuf:"varint,18,opt" json:"IsAuth,omitempty"`
	KeepAlive        *bool    `protobuf:"varint,19,opt" json:"KeepAlive,omitempty"`
	NoDelay          *bool    `protobuf:"varint,20,opt" json:"NoDelay,omitempty"`
	IsAutoReconn     *bool    `protobuf:"varint,21,opt" json:"IsAutoReconn,omitempty"`
	IsInnerLink      *bool    `protobuf:"varint,22,opt" json:"IsInnerLink,omitempty"`
	SupportFragment  *bool    `protobuf:"varint,23,opt" json:"SupportFragment,omitempty"`
	AllowMultiConn   *bool    `protobuf:"varint,24,opt" json:"AllowMultiConn,omitempty"`
	AuthKey          *string  `protobuf:"bytes,25,opt" json:"AuthKey,omitempty"`
	EncoderName      *string  `protobuf:"bytes,26,opt" json:"EncoderName,omitempty"`
	DecoderName      *string  `protobuf:"bytes,27,opt" json:"DecoderName,omitempty"`
	FilterChain      []string `protobuf:"bytes,28,rep" json:"FilterChain,omitempty"`
	HandlerChain     []string `protobuf:"bytes,29,rep" json:"HandlerChain,omitempty"`
	Protocol         *string  `protobuf:"bytes,30,opt" json:"Protocol,omitempty"`
	Path             *string  `protobuf:"bytes,31,opt" json:"Path,omitempty"`
	OuterIp          *string  `protobuf:"bytes,32,opt" json:"OuterIp,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *ServiceInfo) Reset()         { *m = ServiceInfo{} }
func (m *ServiceInfo) String() string { return proto.CompactTextString(m) }
func (*ServiceInfo) ProtoMessage()    {}

func (m *ServiceInfo) GetAreaId() int32 {
	if m != nil && m.AreaId != nil {
		return *m.AreaId
	}
	return 0
}

func (m *ServiceInfo) GetSrvId() int32 {
	if m != nil && m.SrvId != nil {
		return *m.SrvId
	}
	return 0
}

func (m *ServiceInfo) GetSrvType() int32 {
	if m != nil && m.SrvType != nil {
		return *m.SrvType
	}
	return 0
}

func (m *ServiceInfo) GetSrvPID() int32 {
	if m != nil && m.SrvPID != nil {
		return *m.SrvPID
	}
	return 0
}

func (m *ServiceInfo) GetSrvName() string {
	if m != nil && m.SrvName != nil {
		return *m.SrvName
	}
	return ""
}

func (m *ServiceInfo) GetNetworkType() string {
	if m != nil && m.NetworkType != nil {
		return *m.NetworkType
	}
	return ""
}

func (m *ServiceInfo) GetIp() string {
	if m != nil && m.Ip != nil {
		return *m.Ip
	}
	return ""
}

func (m *ServiceInfo) GetPort() int32 {
	if m != nil && m.Port != nil {
		return *m.Port
	}
	return 0
}

func (m *ServiceInfo) GetWriteTimeOut() int32 {
	if m != nil && m.WriteTimeOut != nil {
		return *m.WriteTimeOut
	}
	return 0
}

func (m *ServiceInfo) GetReadTimeOut() int32 {
	if m != nil && m.ReadTimeOut != nil {
		return *m.ReadTimeOut
	}
	return 0
}

func (m *ServiceInfo) GetIdleTimeOut() int32 {
	if m != nil && m.IdleTimeOut != nil {
		return *m.IdleTimeOut
	}
	return 0
}

func (m *ServiceInfo) GetMaxDone() int32 {
	if m != nil && m.MaxDone != nil {
		return *m.MaxDone
	}
	return 0
}

func (m *ServiceInfo) GetMaxPend() int32 {
	if m != nil && m.MaxPend != nil {
		return *m.MaxPend
	}
	return 0
}

func (m *ServiceInfo) GetMaxPacket() int32 {
	if m != nil && m.MaxPacket != nil {
		return *m.MaxPacket
	}
	return 0
}

func (m *ServiceInfo) GetRcvBuff() int32 {
	if m != nil && m.RcvBuff != nil {
		return *m.RcvBuff
	}
	return 0
}

func (m *ServiceInfo) GetSndBuff() int32 {
	if m != nil && m.SndBuff != nil {
		return *m.SndBuff
	}
	return 0
}

func (m *ServiceInfo) GetSoLinger() int32 {
	if m != nil && m.SoLinger != nil {
		return *m.SoLinger
	}
	return 0
}

func (m *ServiceInfo) GetIsAuth() bool {
	if m != nil && m.IsAuth != nil {
		return *m.IsAuth
	}
	return false
}

func (m *ServiceInfo) GetKeepAlive() bool {
	if m != nil && m.KeepAlive != nil {
		return *m.KeepAlive
	}
	return false
}

func (m *ServiceInfo) GetNoDelay() bool {
	if m != nil && m.NoDelay != nil {
		return *m.NoDelay
	}
	return false
}

func (m *ServiceInfo) GetIsAutoReconn() bool {
	if m != nil && m.IsAutoReconn != nil {
		return *m.IsAutoReconn
	}
	return false
}

func (m *ServiceInfo) GetIsInnerLink() bool {
	if m != nil && m.IsInnerLink != nil {
		return *m.IsInnerLink
	}
	return false
}

func (m *ServiceInfo) GetSupportFragment() bool {
	if m != nil && m.SupportFragment != nil {
		return *m.SupportFragment
	}
	return false
}

func (m *ServiceInfo) GetAllowMultiConn() bool {
	if m != nil && m.AllowMultiConn != nil {
		return *m.AllowMultiConn
	}
	return false
}

func (m *ServiceInfo) GetAuthKey() string {
	if m != nil && m.AuthKey != nil {
		return *m.AuthKey
	}
	return ""
}

func (m *ServiceInfo) GetEncoderName() string {
	if m != nil && m.EncoderName != nil {
		return *m.EncoderName
	}
	return ""
}

func (m *ServiceInfo) GetDecoderName() string {
	if m != nil && m.DecoderName != nil {
		return *m.DecoderName
	}
	return ""
}

func (m *ServiceInfo) GetFilterChain() []string {
	if m != nil {
		return m.FilterChain
	}
	return nil
}

func (m *ServiceInfo) GetHandlerChain() []string {
	if m != nil {
		return m.HandlerChain
	}
	return nil
}

func (m *ServiceInfo) GetProtocol() string {
	if m != nil && m.Protocol != nil {
		return *m.Protocol
	}
	return ""
}

func (m *ServiceInfo) GetPath() string {
	if m != nil && m.Path != nil {
		return *m.Path
	}
	return ""
}

func (m *ServiceInfo) GetOuterIp() string {
	if m != nil && m.OuterIp != nil {
		return *m.OuterIp
	}
	return ""
}

type SSServiceRegiste struct {
	Services         []*ServiceInfo `protobuf:"bytes,1,rep" json:"Services,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *SSServiceRegiste) Reset()         { *m = SSServiceRegiste{} }
func (m *SSServiceRegiste) String() string { return proto.CompactTextString(m) }
func (*SSServiceRegiste) ProtoMessage()    {}

func (m *SSServiceRegiste) GetServices() []*ServiceInfo {
	if m != nil {
		return m.Services
	}
	return nil
}

type SSServiceInfo struct {
	Service          *ServiceInfo `protobuf:"bytes,1,req" json:"Service,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *SSServiceInfo) Reset()         { *m = SSServiceInfo{} }
func (m *SSServiceInfo) String() string { return proto.CompactTextString(m) }
func (*SSServiceInfo) ProtoMessage()    {}

func (m *SSServiceInfo) GetService() *ServiceInfo {
	if m != nil {
		return m.Service
	}
	return nil
}

type SSServiceShut struct {
	Service          *ServiceInfo `protobuf:"bytes,1,req" json:"Service,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *SSServiceShut) Reset()         { *m = SSServiceShut{} }
func (m *SSServiceShut) String() string { return proto.CompactTextString(m) }
func (*SSServiceShut) ProtoMessage()    {}

func (m *SSServiceShut) GetService() *ServiceInfo {
	if m != nil {
		return m.Service
	}
	return nil
}

func init() {
}
